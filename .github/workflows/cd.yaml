name: Deploy UAT then Production

on:
  push:
    branches:
      - 'release/**'

env:
  REGISTRY_FROM: regdev13114.azurecr.io
  REGISTRY_TO: regprod13114.azurecr.io
  IMAGE: 'nico13114'
  APP_NAME: 'webdev13114'

jobs:
  publish-uat:
    runs-on: 'ubuntu-latest'
    environment: 'dev'
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF#refs/heads/release/}
      - name: Build base image
        run: |
          echo $VERSION
          echo "github.run_id = ": ${{ github.run_id }}
        env:
          VERSION: ${{ steps.branch_name.outputs.VERSION }}
      - name: checkout
        uses: actions/checkout@v2
      - name: 'azure registry login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_FROM }}
          username: ${{ secrets.ACR_SECRET_ID }}
          password: ${{ secrets.ACR_SECRET_PWD }}
      - name: 'Build the image'
        id: build
        run: |
          echo docker build -t ${{ env.REGISTRY_FROM }}/${{ env.IMAGE }}:$TAG
          docker build -t ${{ env.REGISTRY_FROM }}/${{ env.IMAGE }}:$TAG .
        env:
          TAG: ${{ steps.branch_name.outputs.VERSION }}-${{ github.run_id }}
      - name: 'azure registry login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_FROM }}
          username: ${{ secrets.ACR_APP_SECRET_ID}}
          password: ${{ secrets.ACR_APP_SECRET_PWD }}
      - name: container structure test
        run: "echo container structure test."
      - name: push
        run: |
          docker push ${{ env.REGISTRY_FROM }}/${{ env.IMAGE }}:$TAG
        env:
          TAG: ${{ steps.branch_name.outputs.VERSION }}-${{ github.run_id }}
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: ${{env.REGISTRY_FROM}}/${{ env.IMAGE }}:${{ steps.branch_name.outputs.VERSION }}-${{ github.run_id }}
      - name: e2e
        run: "echo e2e"
      - name: perf
        run: "echo perf"

  publish-prd:
    runs-on: 'ubuntu-latest'
    needs: ["publish-uat"]
    environment: 'prod'
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF#refs/heads/release/}
      - name: Build base image
        run: |
          echo $VERSION
          echo "github.run_id = ": ${{ github.run_id }}
        env:
          VERSION: ${{ steps.branch_name.outputs.VERSION }}
      

